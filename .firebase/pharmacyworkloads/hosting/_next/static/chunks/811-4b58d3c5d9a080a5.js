"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[811],{590:(t,a,e)=>{e.r(a),e.d(a,{addHospital:()=>c,countDepartments:()=>h,countWards:()=>m,deleteHospital:()=>u,getHospital:()=>l,getHospitals:()=>s,updateHospital:()=>p});var r=e(5317),n=e(1761);let i=(0,r.rJ)(n.db,"hospitals"),o=t=>t&&"function"==typeof t.toDate?t.toDate().toISOString().split("T")[0]:t||null,d=async t=>{if(!t)return null;try{let a=await (0,r.x7)(t);if(a.exists())return{id:a.id,...a.data()};return null}catch(t){return console.error("Error getting reference document:",t),null}},s=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let a=i,e=[];if(t.organization&&"all"!==t.organization){let a=(0,r.H9)(n.db,"organizations",t.organization);e.push((0,r._M)("organization","==",a))}"active"===t.status?e.push((0,r._M)("active","==",!0)):"inactive"===t.status&&e.push((0,r._M)("active","==",!1)),e.push((0,r.My)("name")),e.length>0&&(a=(0,r.P)(i,...e));let s=await (0,r.GG)(a),l=[];for(let t of s.docs){let a=t.data(),e=null;a.organization&&(e=await d(a.organization)),l.push({id:t.id,...a,organization:e||{id:"",name:"Unknown"},createdAt:o(a.createdAt),updatedAt:o(a.updatedAt)})}if(t.search){let a=t.search.toLowerCase();return l.filter(t=>{var e,r,n;return(null===(e=t.name)||void 0===e?void 0:e.toLowerCase().includes(a))||(null===(r=t.city)||void 0===r?void 0:r.toLowerCase().includes(a))||(null===(n=t.postcode)||void 0===n?void 0:n.toLowerCase().includes(a))})}return l}catch(t){throw console.error("Error getting hospitals:",t),t}},l=async t=>{try{let a=(0,r.H9)(n.db,"hospitals",t),e=await (0,r.x7)(a);if(!e.exists())return null;{let t=e.data(),a=null;return t.organization&&(a=await d(t.organization)),{id:e.id,...t,organization:a||{id:"",name:"Unknown"},createdAt:o(t.createdAt),updatedAt:o(t.updatedAt)}}}catch(t){throw console.error("Error getting hospital:",t),t}},c=async function(t){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"system";try{let e=null;t.organization&&t.organization.id&&(e=(0,r.H9)(n.db,"organizations",t.organization.id));let{organization:o,...d}=t,s={...d,organization:e,createdAt:(0,r.O5)(),updatedAt:(0,r.O5)(),createdById:a,updatedById:a};return{id:(await (0,r.gS)(i,s)).id,...t}}catch(t){throw console.error("Error adding hospital:",t),t}},p=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"system";try{let i=(0,r.H9)(n.db,"hospitals",t),o=null;a.organization&&a.organization.id&&(o=(0,r.H9)(n.db,"organizations",a.organization.id));let{organization:d,...s}=a,l={...s,organization:o,updatedAt:(0,r.O5)(),updatedById:e};return await (0,r.mZ)(i,l),{id:t,...a}}catch(t){throw console.error("Error updating hospital:",t),t}},u=async t=>{try{let a=(0,r.H9)(n.db,"hospitals",t);return await (0,r.kd)(a),{success:!0,id:t}}catch(t){throw console.error("Error deleting hospital:",t),t}},h=async t=>{try{let a=(0,r.rJ)(n.db,"departments"),e=(0,r.P)(a,(0,r._M)("hospital","==",(0,r.H9)(n.db,"hospitals",t)));return(await (0,r.GG)(e)).size}catch(t){return console.error("Error counting departments:",t),0}},m=async t=>{try{let a=(0,r.rJ)(n.db,"wards"),e=(0,r.P)(a,(0,r._M)("hospital","==",(0,r.H9)(n.db,"hospitals",t)));return(await (0,r.GG)(e)).size}catch(t){return console.error("Error counting wards:",t),0}}},1012:(t,a,e)=>{e.d(a,{HospitalProvider:()=>s,P:()=>l});var r=e(5155),n=e(2115),i=e(590),o=e(6074);let d=(0,n.createContext)(void 0),s=t=>{let{children:a}=t,[e,s]=(0,n.useState)([]),[l,c]=(0,n.useState)([]),[p,u]=(0,n.useState)(!0),[h,m]=(0,n.useState)(null),[y,f]=(0,n.useState)({organization:"all",status:"all",search:""}),g=(0,n.useCallback)(async()=>{try{u(!0),m(null);let t=await (0,i.getHospitals)(y);s(t)}catch(t){console.error("Error fetching hospitals:",t),m("Failed to load hospitals. Please try again.")}finally{u(!1)}},[y]),w=async()=>{try{let t=await (0,o.h6)();c(t)}catch(t){console.error("Error fetching organizations:",t),m("Failed to load organizations for dropdown. Please try again.")}},v=async t=>{try{let a=await (0,i.addHospital)(t);return await g(),a}catch(t){throw console.error("Error adding hospital:",t),m("Failed to add hospital. Please try again."),t}},b=async(t,a)=>{try{let e=await (0,i.updateHospital)(t,a);return await g(),e}catch(t){throw console.error("Error updating hospital:",t),m("Failed to update hospital. Please try again."),t}},P=async t=>{try{await (0,i.deleteHospital)(t),await g()}catch(t){throw console.error("Error deleting hospital:",t),m("Failed to delete hospital. Please try again."),t}};return(0,n.useEffect)(()=>{g().then(t=>t)},[y,g]),(0,n.useEffect)(()=>{w().then(t=>t)},[]),(0,r.jsx)(d.Provider,{value:{hospitals:e,organizations:l,loading:p,error:h,filter:y,setFilter:f,refreshHospitals:g,refreshOrganizations:w,addNewHospital:v,updateExistingHospital:b,removeHospital:P},children:a})},l=()=>{let t=(0,n.useContext)(d);if(void 0===t)throw Error("useHospitals must be used within a HospitalProvider");return t}},1356:(t,a,e)=>{e.d(a,{WardProvider:()=>D,T:()=>C});var r=e(5155),n=e(2115),i=e(5317),o=e(1761);let d=(0,i.rJ)(o.db,"wards"),s=t=>t&&"function"==typeof t.toDate?t.toDate().toISOString().split("T")[0]:t||null,l=async t=>{if(!t)return null;try{let a=await (0,i.x7)(t);if(a.exists())return{id:a.id,...a.data()};return null}catch(t){return console.error("Error getting reference document:",t),null}},c=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let a=d,e=[];if(t.department&&"all"!==t.department){let a=(0,i.H9)(o.db,"departments",t.department);e.push((0,i._M)("department","==",a))}if(t.hospital&&"all"!==t.hospital){let a=(0,i.H9)(o.db,"hospitals",t.hospital);e.push((0,i._M)("hospital","==",a))}!0===t.active?e.push((0,i._M)("active","==",!0)):!1===t.active&&e.push((0,i._M)("active","==",!1)),e.push((0,i.My)("name")),e.length>0&&(a=(0,i.P)(d,...e));let r=await (0,i.GG)(a),n=[];for(let t of r.docs){let a=t.data(),e=null;a.department&&(e=await l(a.department))&&!e.color&&(e.color="#3273dc");let r=null;a.hospital&&(r=await l(a.hospital)),n.push({id:t.id,...a,department:e||{id:"",name:"Unknown"},hospital:r||{id:"",name:"Unknown"},createdAt:s(a.createdAt),updatedAt:s(a.updatedAt)})}if(t.search){let a=t.search.toLowerCase();return n.filter(t=>{var e,r;return(null===(e=t.name)||void 0===e?void 0:e.toLowerCase().includes(a))||(null===(r=t.code)||void 0===r?void 0:r.toLowerCase().includes(a))})}return n}catch(t){throw console.error("Error getting wards:",t),t}},p=async function(t){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"system";try{let e=null;t.department&&t.department.id&&(e=(0,i.H9)(o.db,"departments",t.department.id));let r=null;t.hospital&&t.hospital.id&&(r=(0,i.H9)(o.db,"hospitals",t.hospital.id));let{department:n,hospital:s,...l}=t,c={...l,department:e,hospital:r,createdAt:(0,i.O5)(),updatedAt:(0,i.O5)(),createdById:a,updatedById:a};return{id:(await (0,i.gS)(d,c)).id,...t}}catch(t){throw console.error("Error adding ward:",t),t}},u=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"system";try{let r=(0,i.H9)(o.db,"wards",t),n=null;a.department&&a.department.id&&(n=(0,i.H9)(o.db,"departments",a.department.id));let d=null;a.hospital&&a.hospital.id&&(d=(0,i.H9)(o.db,"hospitals",a.hospital.id));let{department:s,hospital:l,...c}=a,p={...c,department:n,hospital:d,updatedAt:(0,i.O5)(),updatedById:e};return await (0,i.mZ)(r,p),{id:t,...a}}catch(t){throw console.error("Error updating ward:",t),t}},h=async t=>{try{let a=(0,i.H9)(o.db,"wards",t);return await (0,i.kd)(a),{success:!0,id:t}}catch(t){throw console.error("Error deleting ward:",t),t}},m=async t=>{try{let a=(0,i.H9)(o.db,"departments",t),e=(0,i.P)(d,(0,i._M)("department","==",a),(0,i.My)("name")),r=await (0,i.GG)(e),n=[];for(let a of r.docs){let e=a.data();n.push({id:a.id,...e,department:{id:t,name:"Department"},createdAt:s(e.createdAt),updatedAt:s(e.updatedAt)})}return n}catch(t){throw console.error("Error getting wards by department:",t),t}};var y=e(5793);let f=(0,i.rJ)(o.db,"ward_department_assignments"),g=t=>t&&"function"==typeof t.toDate?t.toDate().toISOString().split("T")[0]:t||null,w=async t=>{if(!t)return null;try{let a=await (0,i.x7)(t);if(a.exists())return{id:a.id,...a.data()};return null}catch(t){return console.error("Error getting reference document:",t),null}},v=async t=>{try{let a=(0,i.H9)(o.db,"wards",t),e=(0,i.P)(f,(0,i._M)("ward","==",a),(0,i._M)("active","==",!0)),r=await (0,i.GG)(e),n=[];for(let t of r.docs){let a=t.data(),e=null;a.department&&(e=await w(a.department)),n.push({id:t.id,department:e?{id:e.id,name:e.name,code:e.code,color:e.color||"#3273dc"}:null,isPrimary:a.isPrimary||!1,startDate:g(a.startDate),endDate:g(a.endDate)})}return n}catch(t){throw console.error("Error getting ward department assignments:",t),t}},b=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"system";try{let n=(0,i.H9)(o.db,"wards",t),d=(0,i.H9)(o.db,"departments",a),s=(0,i.P)(f,(0,i._M)("ward","==",n),(0,i._M)("department","==",d),(0,i._M)("active","==",!0)),l=await (0,i.GG)(s);if(!l.empty){let t=l.docs[0];return await (0,i.mZ)((0,i.H9)(o.db,"ward_department_assignments",t.id),{isPrimary:e,updatedAt:(0,i.O5)(),updatedById:r}),{id:t.id,isPrimary:e}}if(e){let t=(0,i.P)(f,(0,i._M)("ward","==",n),(0,i._M)("isPrimary","==",!0),(0,i._M)("active","==",!0)),a=await (0,i.GG)(t);a.empty||await (0,i.mZ)((0,i.H9)(o.db,"ward_department_assignments",a.docs[0].id),{isPrimary:!1,updatedAt:(0,i.O5)(),updatedById:r})}let c={ward:n,department:d,isPrimary:e,active:!0,startDate:(0,i.O5)(),endDate:null,createdAt:(0,i.O5)(),updatedAt:(0,i.O5)(),createdById:r,updatedById:r};return{id:(await (0,i.gS)(f,c)).id,isPrimary:e}}catch(t){throw console.error("Error assigning ward to department:",t),t}},P=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"system";try{let r=(0,i.H9)(o.db,"wards",a),n=(0,i.P)(f,(0,i._M)("ward","==",r),(0,i._M)("isPrimary","==",!0),(0,i._M)("active","==",!0)),d=await (0,i.GG)(n);if(!d.empty)for(let a of d.docs)a.id!==t&&await (0,i.mZ)((0,i.H9)(o.db,"ward_department_assignments",a.id),{isPrimary:!1,updatedAt:(0,i.O5)(),updatedById:e});let s=(0,i.H9)(o.db,"ward_department_assignments",t);return await (0,i.mZ)(s,{isPrimary:!0,updatedAt:(0,i.O5)(),updatedById:e}),{success:!0}}catch(t){throw console.error("Error setting primary department:",t),t}},E=async function(t){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"system";try{let e=(0,i.H9)(o.db,"ward_department_assignments",t),r=await (0,i.x7)(e);if(!r.exists())throw Error("Assignment not found");let n=r.data();if(n.isPrimary){let e=n.ward,r=(0,i.P)(f,(0,i._M)("ward","==",e),(0,i._M)("active","==",!0)),d=await (0,i.GG)(r);if(d.size>1){for(let e of d.docs)if(e.id!==t){await (0,i.mZ)((0,i.H9)(o.db,"ward_department_assignments",e.id),{isPrimary:!0,updatedAt:(0,i.O5)(),updatedById:a});break}}}return await (0,i.mZ)(e,{active:!1,endDate:(0,i.O5)(),updatedAt:(0,i.O5)(),updatedById:a}),{success:!0}}catch(t){throw console.error("Error removing ward-department assignment:",t),t}},H=async t=>{try{let a=(0,i.H9)(o.db,"departments",t),e=(0,i.P)(f,(0,i._M)("department","==",a),(0,i._M)("active","==",!0)),r=await (0,i.GG)(e),n=[];for(let t of r.docs){let a=t.data(),e=null;a.ward&&(e=await w(a.ward)),e&&n.push({id:e.id,name:e.name,code:e.code,isPrimary:a.isPrimary||!1,assignmentId:t.id})}return n}catch(t){throw console.error("Error getting wards for department:",t),t}};var A=e(4950);let _=t=>{var a,e;return{id:t.id||"",name:t.name||(null===(a=t.organization)||void 0===a?void 0:a.name)||"Unknown Hospital",address:t.address||"",city:t.city||"",postcode:t.postcode||"",contactNumber:t.contactNumber||"",contactEmail:t.contactEmail||"",beds:t.beds||0,active:null===(e=t.active)||void 0===e||e,organization:t.organization||{id:"",name:""},departments:t.departments,wards:t.wards,staff:t.staff,createdAt:t.createdAt,updatedAt:t.updatedAt}};var z=e(590);let S=t=>({id:t.id||"",department:t.department||{id:"",name:"Unknown Department",code:"UNK"},isPrimary:t.isPrimary||!1,startDate:t.startDate,endDate:t.endDate}),M=(0,n.createContext)(void 0),D=t=>{let{children:a}=t,[e,i]=(0,n.useState)([]),[o,d]=(0,n.useState)([]),[s,l]=(0,n.useState)([]),[f,g]=(0,n.useState)(!0),[w,D]=(0,n.useState)(null),[C,I]=(0,n.useState)({department:"all",hospital:"all",search:""}),[B,O]=(0,n.useState)([]),G=(0,n.useCallback)(async()=>{try{g(!0),D(null);let t=await c(C);i(t)}catch(t){console.error("Error fetching wards:",t),D("Failed to load wards. Please try again.")}finally{g(!1)}},[C]),F=async()=>{try{let t=(await (0,y.ax)({active:!0})).map(t=>(0,A.yL)(t));d(t)}catch(t){console.error("Error fetching departments:",t),D("Failed to load departments for dropdown. Please try again.")}},x=async()=>{try{let t=(await (0,z.getHospitals)({status:"active"})).map(t=>_(t));l(t)}catch(t){console.error("Error fetching hospitals:",t),D("Failed to load hospitals for dropdown. Please try again.")}},k=async t=>{try{return await m(t)}catch(t){return console.error("Error fetching wards for department:",t),D("Failed to load wards for this department. Please try again."),[]}},L=async t=>{try{let a=await p(t);return await G(),a}catch(t){throw console.error("Error adding ward:",t),D("Failed to add ward. Please try again."),t}},R=async(t,a)=>{try{let e=await u(t,a);return await G(),e}catch(t){throw console.error("Error updating ward:",t),D("Failed to update ward. Please try again."),t}},T=async t=>{try{await h(t),await G()}catch(t){throw console.error("Error deleting ward:",t),D(t.message||"Failed to delete ward. Please try again."),t}},U=async t=>{try{let a=(await v(t)).filter(t=>null!==t.department).map(t=>S(t));return O(a),a}catch(t){return console.error("Error getting ward departments:",t),D("Failed to load department assignments for this ward. Please try again."),[]}},Z=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];try{await b(t,a,e),await U(t);return}catch(t){throw console.error("Error assigning ward to department:",t),D("Failed to assign department to ward. Please try again."),t}},J=async(t,a)=>{try{await P(t,a),await U(a);return}catch(t){throw console.error("Error setting primary department:",t),D("Failed to set primary department. Please try again."),t}},N=async t=>{try{await E(t),O(a=>a.filter(a=>a.id!==t));return}catch(t){throw console.error("Error removing ward-department assignment:",t),D("Failed to remove department assignment. Please try again."),t}},W=async t=>{try{return await H(t)}catch(t){return console.error("Error getting wards for department:",t),D("Failed to load wards for this department. Please try again."),[]}};return(0,n.useEffect)(()=>{G().then(t=>t)},[C,G]),(0,n.useEffect)(()=>{(async()=>{await Promise.all([F(),x()])})().then(t=>t)},[]),(0,r.jsx)(M.Provider,{value:{wards:e,departments:o,hospitals:s,loading:f,error:w,filter:C,setFilter:I,refreshWards:G,refreshDepartments:F,refreshHospitals:x,getWardsByDepartment:k,addNewWard:L,updateExistingWard:R,removeWard:T,currentWardDepartments:B,setCurrentWardDepartments:O,getWardDepartments:U,assignWardToDepartment:Z,setPrimaryDepartment:J,removeWardDepartmentAssignment:N,getWardsForDepartment:W},children:a})},C=()=>{let t=(0,n.useContext)(M);if(void 0===t)throw Error("useWards must be used within a WardProvider");return t}},1761:(t,a,e)=>{e.d(a,{db:()=>d});var r=e(3915),n=e(5317),i=e(6203);let o=(0,r.Wp)({apiKey:"AIzaSyAhIII2Nq31ZavPpSg57irRDc1c-vzQds4",authDomain:"pharmacyworkloads.firebaseapp.com",projectId:"pharmacyworkloads",storageBucket:"pharmacyworkloads.firebasestorage.app",messagingSenderId:"741866005078",appId:"1:741866005078:web:99cd1f184a2fb84d8151f7",measurementId:"G-GZLKPTM5MX"}),d=(0,n.aU)(o);(0,i.xI)(o)},4012:(t,a,e)=>{e.d(a,{StaffProvider:()=>E,iC:()=>v,Wg:()=>b,lD:()=>w,gW:()=>H});var r=e(5155),n=e(2115),i=e(5317),o=e(1761);let d=(0,i.rJ)(o.db,"staff"),s=t=>t&&"function"==typeof t.toDate?t.toDate().toISOString().split("T")[0]:t||null,l=async t=>{if(!t)return null;try{let a=await (0,i.x7)(t);if(a.exists())return{id:a.id,...a.data()};return null}catch(t){return console.error("Error getting reference document:",t),null}},c=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let a=d,e=[];if(t.organization&&"all"!==t.organization){let a=(0,i.H9)(o.db,"organizations",t.organization);e.push((0,i._M)("organization","==",a))}if(t.hospital&&"all"!==t.hospital){let a=(0,i.H9)(o.db,"hospitals",t.hospital);e.push((0,i._M)("defaultHospital","==",a))}if(t.role&&"all"!==t.role){let a=(0,i.H9)(o.db,"staff_roles",t.role);e.push((0,i._M)("primaryRole","==",a))}t.showInactive||e.push((0,i._M)("active","==",!0)),e.push((0,i.My)("name")),e.length>0&&(a=(0,i.P)(d,...e));let r=await (0,i.GG)(a),n=[];for(let t of r.docs){let a=t.data(),e=null;a.organization&&(e=await l(a.organization));let r=null;a.defaultHospital&&(r=await l(a.defaultHospital));let d=null;a.primaryRole&&(d=await l(a.primaryRole));let c=[];try{let a=(0,i.P)((0,i.rJ)(o.db,"staff_department_assignments"),(0,i._M)("staff","==",(0,i.H9)(o.db,"staff",t.id)),(0,i._M)("active","==",!0));for(let t of(await (0,i.GG)(a)).docs){let a=t.data();if(a.department){let t=await l(a.department);t&&c.push({id:t.id,name:t.name,color:t.color})}}}catch(t){console.error("Error getting department assignments:",t)}n.push({id:t.id,...a,organization:e||{id:"",name:"Unknown"},defaultHospital:r||{id:"",name:"Unknown"},primaryRole:d||{id:"",name:"Unknown"},departments:c,startDate:s(a.startDate),createdAt:s(a.createdAt),updatedAt:s(a.updatedAt)})}let c=n;if(t.department&&"all"!==t.department&&(c=n.filter(a=>{var e;return null===(e=a.departments)||void 0===e?void 0:e.some(a=>a.id===t.department)})),t.search){let a=t.search.toLowerCase();return c.filter(e=>{var r,n,i,o,d,s,l;return(null===(r=e.name)||void 0===r?void 0:r.toLowerCase().includes(a))||(null===(n=e.email)||void 0===n?void 0:n.toLowerCase().includes(a))||(null===(i=e.phone)||void 0===i?void 0:i.includes(t.search))||(null===(d=e.primaryRole)||void 0===d?void 0:null===(o=d.name)||void 0===o?void 0:o.toLowerCase().includes(a))||(null===(l=e.departmentRole)||void 0===l?void 0:null===(s=l.name)||void 0===s?void 0:s.toLowerCase().includes(a))})}return c}catch(t){throw console.error("Error getting staff:",t),t}},p=async t=>{try{let a=(0,i.H9)(o.db,"departments",t),e=(0,i.P)((0,i.rJ)(o.db,"staff_department_assignments"),(0,i._M)("department","==",a),(0,i._M)("active","==",!0)),r=(await (0,i.GG)(e)).docs.map(async a=>{let e=a.data();if(e.staff){let a=e.staff,r=await (0,i.x7)(a);if(r.exists()){let a=r.data(),e=null;a.organization&&(e=await l(a.organization));let n=null;a.defaultHospital&&(n=await l(a.defaultHospital));let i=null;return a.primaryRole&&(i=await l(a.primaryRole)),{id:r.id,...a,organization:e||{id:"",name:"Unknown"},defaultHospital:n||{id:"",name:"Unknown"},primaryRole:i||{id:"",name:"Unknown"},departments:[{id:t,name:"Current Department"}],startDate:s(a.startDate),createdAt:s(a.createdAt),updatedAt:s(a.updatedAt)}}}return null});return(await Promise.all(r)).filter(Boolean)}catch(t){throw console.error("Error getting staff for department:",t),t}},u=async function(t){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"system";try{let e=null;t.organization&&t.organization.id&&(e=(0,i.H9)(o.db,"organizations",t.organization.id));let r=null;t.defaultHospital&&t.defaultHospital.id&&(r=(0,i.H9)(o.db,"hospitals",t.defaultHospital.id));let n=null;t.primaryRole&&t.primaryRole.id&&(n=(0,i.H9)(o.db,"staff_roles",t.primaryRole.id));let{organization:s,defaultHospital:l,primaryRole:c,departments:p,usualWorkingHours:u,...h}=t,m={...h,organization:e,defaultHospital:r,primaryRole:n,startDate:t.startDate?new Date(t.startDate):null,createdAt:(0,i.O5)(),updatedAt:(0,i.O5)(),createdById:a,updatedById:a};u&&(m.usualWorkingHours=u);let y=await (0,i.gS)(d,m);if(p&&p.length>0){let t=(0,i.H9)(o.db,"staff",y.id);for(let e of p)if(e.id){let r=(0,i.H9)(o.db,"departments",e.id);await (0,i.gS)((0,i.rJ)(o.db,"staff_department_assignments"),{staff:t,department:r,startDate:new Date,endDate:null,active:!0,createdAt:(0,i.O5)(),updatedAt:(0,i.O5)(),createdById:a,updatedById:a})}}return{id:y.id,...t}}catch(t){throw console.error("Error adding staff:",t),t}},h=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"system";try{let r,n,d;let s=(0,i.H9)(o.db,"staff",t);a.organization&&a.organization.id&&(r=(0,i.H9)(o.db,"organizations",a.organization.id)),a.defaultHospital&&a.defaultHospital.id&&(n=(0,i.H9)(o.db,"hospitals",a.defaultHospital.id)),a.primaryRole&&a.primaryRole.id&&(d=(0,i.H9)(o.db,"staff_roles",a.primaryRole.id));let{organization:l,defaultHospital:c,primaryRole:p,departments:u,...h}=a,m={...h,updatedAt:(0,i.O5)(),updatedById:e};if(void 0!==r&&(m.organization=r),void 0!==n&&(m.defaultHospital=n),void 0!==d&&(m.primaryRole=d),a.startDate&&(m.startDate=new Date(a.startDate)),await (0,i.mZ)(s,m),u){let t=(0,i.P)((0,i.rJ)(o.db,"staff_department_assignments"),(0,i._M)("staff","==",s),(0,i._M)("active","==",!0)),a=await (0,i.GG)(t),r=new Map;for(let t of(a.forEach(t=>{let a=t.data();if(a.department){let e=a.department.path.split("/").pop();r.set(e,t.id)}}),u))if(t.id){if(r.has(t.id))r.delete(t.id);else{let a=(0,i.H9)(o.db,"departments",t.id);await (0,i.gS)((0,i.rJ)(o.db,"staff_department_assignments"),{staff:s,department:a,startDate:new Date,endDate:null,active:!0,createdAt:(0,i.O5)(),updatedAt:(0,i.O5)(),createdById:e,updatedById:e})}}for(let[t,a]of r.entries()){let t=(0,i.H9)(o.db,"staff_department_assignments",a);await (0,i.mZ)(t,{active:!1,endDate:new Date,updatedAt:(0,i.O5)(),updatedById:e})}}return{id:t,...a}}catch(t){throw console.error("Error updating staff:",t),t}},m=async t=>{try{let a=(0,i.H9)(o.db,"staff",t);if(!(await (0,i.x7)(a)).exists())throw Error("Staff member not found");return await (0,i.mZ)(a,{active:!1,updatedAt:(0,i.O5)(),updatedById:"system"}),{success:!0,id:t}}catch(t){throw console.error("Error deleting staff:",t),t}};var y=e(5793),f=e(590),g=e(6074);let w=[{id:"warfarin",name:"Warfarin"},{id:"independent_prescriber",name:"Independent Prescriber"},{id:"hospice",name:"Hospice"},{id:"icar",name:"ICAR"},{id:"paediatrics",name:"Paediatrics"},{id:"cote",name:"COTE"},{id:"med",name:"MED"},{id:"surg",name:"SURG"},{id:"emrg",name:"EMRG"},{id:"history",name:"Medication History Taking"},{id:"tto",name:"TTO Processing"},{id:"iv",name:"IV Preparation"},{id:"chemo",name:"Chemotherapy"}],v=[{id:"manager",name:"Manager"},{id:"admin",name:"Admin"},{id:"coordinator",name:"Coordinator"},{id:"supervisor",name:"Supervisor"},{id:"staff",name:"Staff"}],b=[{id:"band2",name:"Band 2"},{id:"band3",name:"Band 3"},{id:"band4",name:"Band 4"},{id:"band5",name:"Band 5"},{id:"band6",name:"Band 6"},{id:"band7",name:"Band 7"},{id:"band8a",name:"Band 8a"},{id:"band8b",name:"Band 8b"},{id:"band8c",name:"Band 8c"},{id:"band8d",name:"Band 8d"},{id:"band9",name:"Band 9"}],P=(0,n.createContext)(void 0),E=t=>{let{children:a}=t,[e,i]=(0,n.useState)([]),[o,d]=(0,n.useState)([]),[s,l]=(0,n.useState)([]),[w,v]=(0,n.useState)([]),[b,E]=(0,n.useState)([]),[H,A]=(0,n.useState)(!0),[_,z]=(0,n.useState)(null),[S,M]=(0,n.useState)({organization:"all",hospital:"all",department:"all",role:"all",search:""}),D=async()=>{try{A(!0),z(null);let t=await c(S);i(t)}catch(t){console.error("Error fetching staff:",t),z("Failed to load staff. Please try again.")}finally{A(!1)}},C=async()=>{try{let t=await (0,g.h6)({status:"active"});d(t)}catch(t){console.error("Error fetching organizations:",t),z("Failed to load organizations. Please try again.")}},I=async()=>{try{let t=await (0,f.getHospitals)({status:"active"});l(t)}catch(t){console.error("Error fetching hospitals:",t),z("Failed to load hospitals. Please try again.")}},B=async()=>{try{let t=await (0,y.ax)({active:!0});v(t)}catch(t){console.error("Error fetching departments:",t),z("Failed to load departments. Please try again.")}},O=async()=>{try{E([{id:"pharmacist",name:"Pharmacist",description:"Licensed pharmacist"},{id:"technician",name:"Pharmacy Technician",description:"Qualified pharmacy technician"},{id:"dispenser",name:"Dispenser",description:"Pharmacy dispenser"},{id:"prereg",name:"Pre-Registration Pharmacist",description:"Pharmacist in training"},{id:"assistant",name:"Pharmacy Assistant",description:"Pharmacy assistant"},{id:"porter",name:"Porter",description:"Pharmacy porter"}])}catch(t){console.error("Error fetching staff roles:",t),z("Failed to load staff roles. Please try again.")}},G=async t=>{try{return await p(t)}catch(t){return console.error("Error fetching staff for department:",t),z("Failed to load staff for this department. Please try again."),[]}},F=async t=>{try{let a=await u(t);return await D(),a}catch(t){throw console.error("Error adding staff:",t),z("Failed to add staff. Please try again."),t}},x=async(t,a)=>{try{let e=await h(t,a);return await D(),e}catch(t){throw console.error("Error updating staff:",t),z("Failed to update staff. Please try again."),t}},k=async t=>{try{await m(t),await D()}catch(t){throw console.error("Error deleting staff:",t),z("Failed to delete staff. Please try again."),t}};return(0,n.useEffect)(()=>{D().then()},[S]),(0,n.useEffect)(()=>{Promise.all([C(),I(),B(),O()])},[]),(0,r.jsx)(P.Provider,{value:{staff:e,organizations:o,hospitals:s,departments:w,staffRoles:b,loading:H,error:_,filter:S,setFilter:M,refreshStaff:D,refreshOrganizations:C,refreshHospitals:I,refreshDepartments:B,refreshStaffRoles:O,getStaffByDepartment:G,addNewStaff:F,updateExistingStaff:x,removeStaff:k},children:a})},H=()=>{let t=(0,n.useContext)(P);if(void 0===t)throw Error("useStaff must be used within a StaffProvider");return t}},4950:(t,a,e)=>{e.d(a,{bi:()=>i,fM:()=>o,yL:()=>n});var r=e(5793);let n=t=>({id:t.id||"",name:t.name||"",code:t.code||"",type:t.type||"",hospital:t.hospital||{id:"",name:""},parent:t.parent||null,active:t.active||!1,description:t.description,color:t.color,requiresLunchCover:t.requiresLunchCover,pharmacistCount:t.pharmacistCount,technicianCount:t.technicianCount,createdAt:t.createdAt,updatedAt:t.updatedAt,children:t.children?t.children.map(n):void 0}),i=async t=>(await (0,r.ax)(t)).map(t=>n(t)),o=async t=>(await (0,r.og)(t)).map(n)},5793:(t,a,e)=>{e.d(a,{Aj:()=>u,YE:()=>c,ax:()=>s,cM:()=>p,og:()=>l,u9:()=>h});var r=e(5317),n=e(1761);let i=(0,r.rJ)(n.db,"departments"),o=t=>t&&"function"==typeof t.toDate?t.toDate().toISOString().split("T")[0]:t||null,d=async t=>{if(!t)return null;try{let a=await (0,r.x7)(t);if(a.exists())return{id:a.id,...a.data()};return null}catch(t){return console.error("Error getting reference document:",t),null}},s=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let a=i,e=[];if(t.hospital&&"all"!==t.hospital){let a=(0,r.H9)(n.db,"hospitals",t.hospital);e.push((0,r._M)("hospital","==",a))}if(t.type&&"all"!==t.type&&e.push((0,r._M)("type","==",t.type)),"root"===t.parent)e.push((0,r._M)("parent","==",null));else if(t.parent&&"all"!==t.parent){let a=(0,r.H9)(n.db,"departments",t.parent);e.push((0,r._M)("parent","==",a))}!0===t.active?e.push((0,r._M)("active","==",!0)):!1===t.active&&e.push((0,r._M)("active","==",!1)),e.push((0,r.My)("name")),e.length>0&&(a=(0,r.P)(i,...e));let s=await (0,r.GG)(a),l=[];for(let t of s.docs){let a=t.data(),e=null;a.hospital&&(e=await d(a.hospital));let r=null;a.parent&&(r=await d(a.parent)),l.push({id:t.id,...a,hospital:e||{id:"",name:"Unknown"},parent:r,createdAt:o(a.createdAt),updatedAt:o(a.updatedAt)})}if(t.search){let a=t.search.toLowerCase();return l.filter(t=>{var e,r,n;return(null===(e=t.name)||void 0===e?void 0:e.toLowerCase().includes(a))||(null===(r=t.code)||void 0===r?void 0:r.toLowerCase().includes(a))||(null===(n=t.description)||void 0===n?void 0:n.toLowerCase().includes(a))})}return l}catch(t){throw console.error("Error getting departments:",t),t}},l=async t=>{try{if(!t)return[];let a=(0,r.H9)(n.db,"departments",t),e=(0,r.P)(i,(0,r._M)("parent","==",a),(0,r.My)("name")),s=await (0,r.GG)(e),l=[];for(let a of s.docs){let e=a.data(),r=null;e.hospital&&(r=await d(e.hospital)),l.push({id:a.id,...e,hospital:r||{id:"",name:"Unknown"},parent:{id:t,name:"Parent Department"},createdAt:o(e.createdAt),updatedAt:o(e.updatedAt)})}return l}catch(t){throw console.error("Error getting department children:",t),t}},c=async function(t){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"system";try{let e=null;t.hospital&&t.hospital.id&&(e=(0,r.H9)(n.db,"hospitals",t.hospital.id));let o=null;t.parent&&t.parent.id&&(o=(0,r.H9)(n.db,"departments",t.parent.id));let{hospital:d,parent:s,...l}=t,c={...l,hospital:e,parent:o,createdAt:(0,r.O5)(),updatedAt:(0,r.O5)(),createdById:a,updatedById:a};return{id:(await (0,r.gS)(i,c)).id,...t}}catch(t){throw console.error("Error adding department:",t),t}},p=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"system";try{let i=(0,r.H9)(n.db,"departments",t),o=null;a.hospital&&a.hospital.id&&(o=(0,r.H9)(n.db,"hospitals",a.hospital.id));let d=null;a.parent&&a.parent.id&&(d=(0,r.H9)(n.db,"departments",a.parent.id));let{hospital:s,parent:l,...c}=a,p={...c,hospital:o,parent:d,updatedAt:(0,r.O5)(),updatedById:e};return await (0,r.mZ)(i,p),{id:t,...a}}catch(t){throw console.error("Error updating department:",t),t}},u=async t=>{try{if((await l(t)).length>0)throw Error("Cannot delete department with subdepartments. Please delete or reassign subdepartments first.");let a=(0,r.H9)(n.db,"departments",t);return await (0,r.kd)(a),{success:!0,id:t}}catch(t){throw console.error("Error deleting department:",t),t}},h=()=>[{id:"pharmacy",name:"Pharmacy"},{id:"clinical",name:"Clinical"},{id:"outpatient",name:"Outpatient"},{id:"inpatient",name:"Inpatient"},{id:"medical",name:"Medical"},{id:"porters",name:"Porters"},{id:"catering",name:"Catering"},{id:"admin",name:"Administration"},{id:"other",name:"Other"}]},6074:(t,a,e)=>{e.d(a,{Dp:()=>c,F3:()=>s,L_:()=>l,N_:()=>p,h6:()=>d});var r=e(5317),n=e(1761);let i=(0,r.rJ)(n.db,"organizations"),o=t=>t&&"function"==typeof t.toDate?t.toDate().toISOString().split("T")[0]:t||null,d=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let a=i,e=[];t.type&&"all"!==t.type&&e.push((0,r._M)("type","==",t.type)),"active"===t.status?e.push((0,r._M)("active","==",!0)):"inactive"===t.status&&e.push((0,r._M)("active","==",!1)),e.push((0,r.My)("name")),e.length>0&&(a=(0,r.P)(i,...e));let n=await (0,r.GG)(a),d=[];if(n.forEach(t=>{let a=t.data();d.push({id:t.id,...a,hospitalCount:a.hospitalCount||0,createdAt:o(a.createdAt),updatedAt:o(a.updatedAt)})}),t.search){let a=t.search.toLowerCase();return d.filter(e=>{var r,n;return(null===(r=e.name)||void 0===r?void 0:r.toLowerCase().includes(a))||(null===(n=e.contactEmail)||void 0===n?void 0:n.toLowerCase().includes(a))||e.contactPhone&&e.contactPhone.includes(t.search)})}return d}catch(t){throw console.error("Error getting organizations:",t),t}},s=async function(t){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"system";try{let e={...t,createdAt:(0,r.O5)(),updatedAt:(0,r.O5)(),createdById:a,updatedById:a,hospitalCount:0};return{id:(await (0,r.gS)(i,e)).id,...t}}catch(t){throw console.error("Error adding organization:",t),t}},l=async function(t,a){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"system";try{let i=(0,r.H9)(n.db,"organizations",t),o={...a,updatedAt:(0,r.O5)(),updatedById:e};return await (0,r.mZ)(i,o),{id:t,...a}}catch(t){throw console.error("Error updating organization:",t),t}},c=async t=>{try{let a=(0,r.H9)(n.db,"organizations",t);return await (0,r.kd)(a),{success:!0,id:t}}catch(t){throw console.error("Error deleting organization:",t),t}},p=()=>[{id:"NHS Trust",name:"NHS Trust"},{id:"NHS Foundation Trust",name:"NHS Foundation Trust"},{id:"Private Healthcare",name:"Private Healthcare"},{id:"Community Healthcare",name:"Community Healthcare"}]},6096:(t,a,e)=>{e.d(a,{DepartmentProvider:()=>l,T:()=>c});var r=e(5155),n=e(2115),i=e(5793),o=e(590),d=e(4950);let s=(0,n.createContext)(void 0),l=t=>{let{children:a}=t,[e,l]=(0,n.useState)([]),[c,p]=(0,n.useState)([]),[u,h]=(0,n.useState)([]),[m,y]=(0,n.useState)([]),[f,g]=(0,n.useState)(!0),[w,v]=(0,n.useState)(null),[b,P]=(0,n.useState)({hospital:"all",type:"all",parent:"all",search:""}),[E,H]=(0,n.useState)([]);(0,n.useEffect)(()=>{y((0,i.u9)())},[]);let A=async t=>{let a=t.filter(t=>!t.parent),e=[];for(let t of a){let a=await (0,d.fM)(t.id);e.push({...t,children:a})}return e},_=async()=>{try{let t=(await (0,d.bi)({hospital:"all",type:"all",parent:"all",search:""})).filter(t=>!t.parent);H(t)}catch(t){console.error("Error loading all root departments:",t)}},z=(0,n.useCallback)(async()=>{try{g(!0),v(null);let t=await (0,d.bi)(b);if(l(t),"all"!==b.parent||"all"!==b.hospital||"all"!==b.type||b.search)p(t);else{let a=await A(t);p(a)}}catch(t){console.error("Error fetching departments:",t),v("Failed to load departments. Please try again.")}finally{g(!1)}},[b]),S=async()=>{try{let t=(await (0,o.getHospitals)({status:"active"})).map(t=>({...t,name:t.organization.name}));h(t)}catch(t){console.error("Error fetching hospitals:",t),v("Failed to load hospitals for dropdown. Please try again.")}},M=async t=>{try{return await (0,d.fM)(t)}catch(t){return console.error("Error fetching department children:",t),v("Failed to load subdepartments. Please try again."),[]}},D=async t=>{try{let a=await (0,i.YE)(t),e=(0,d.yL)(a);return await z(),t.parent||await _(),e}catch(t){throw console.error("Error adding department:",t),v("Failed to add department. Please try again."),t}},C=async(t,a)=>{try{let e=await (0,i.cM)(t,a),r=(0,d.yL)(e);return await z(),"parent"in a&&await _(),r}catch(t){throw console.error("Error updating department:",t),v("Failed to update department. Please try again."),t}},I=async t=>{try{await (0,i.Aj)(t),await z(),await _()}catch(t){throw console.error("Error deleting department:",t),v("Failed to delete department. Please try again."),t}};return(0,n.useEffect)(()=>{_().then(t=>t)},[]),(0,n.useEffect)(()=>{z().then(t=>t)},[b,z]),(0,n.useEffect)(()=>{S().then(t=>t)},[]),(0,r.jsx)(s.Provider,{value:{departments:e,departmentHierarchy:c,hospitals:u,departmentTypes:m,loading:f,error:w,filter:b,setFilter:P,refreshDepartments:z,refreshHospitals:S,getDepartmentChildren:M,addNewDepartment:D,updateExistingDepartment:C,removeDepartment:I,getAllRootDepartments:()=>E},children:a})},c=()=>{let t=(0,n.useContext)(s);if(void 0===t)throw Error("useDepartments must be used within a DepartmentProvider");return t}},8209:(t,a,e)=>{e.d(a,{G:()=>s,OrganizationProvider:()=>d});var r=e(5155),n=e(2115),i=e(6074);let o=(0,n.createContext)(void 0),d=t=>{let{children:a}=t,[e,d]=(0,n.useState)([]),[s,l]=(0,n.useState)(!0),[c,p]=(0,n.useState)(null),[u,h]=(0,n.useState)({type:"all",status:"all",search:""}),m=async()=>{try{l(!0),p(null);let t=await (0,i.h6)(u);d(t)}catch(t){console.error("Error fetching organizations:",t),p("Failed to load organizations. Please try again.")}finally{l(!1)}},y=async t=>{try{let a=await (0,i.F3)(t);return await m(),a}catch(t){throw console.error("Error adding organization:",t),p("Failed to add organization. Please try again."),t}},f=async(t,a)=>{try{let e=await (0,i.L_)(t,a);return await m(),e}catch(t){throw console.error("Error updating organization:",t),p("Failed to update organization. Please try again."),t}},g=async t=>{try{await (0,i.Dp)(t),await m()}catch(t){throw console.error("Error deleting organization:",t),p("Failed to delete organization. Please try again."),t}};return(0,n.useEffect)(()=>{m().then(t=>t)},[u]),(0,r.jsx)(o.Provider,{value:{organizations:e,loading:s,error:c,filter:u,setFilter:h,refreshOrganizations:m,addNewOrganization:y,updateExistingOrganization:f,removeOrganization:g},children:a})},s=()=>{let t=(0,n.useContext)(o);if(void 0===t)throw Error("useOrganizations must be used within an OrganizationProvider");return t}}}]);